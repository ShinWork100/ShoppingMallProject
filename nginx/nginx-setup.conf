upstream backend {
    server backend:8000;
}

server {
    listen 8080;

    #react file location client send request change
    location / {
        # frontned react location
        root /var/www/frontend;
        # Your react app serves three routes (/home, /slide, and /product). However, in your Nginx config, you don't have any rules for handling frontend routes. This means if someone directly accesses these routes via URL (e.g., http://localhost:8080/home), they will get a 404 error because Nginx does not know how to handle them.
        # To fix this, you can configure Nginx to always serve the React index.html for any unmatched route. This way, React's client-side router can take over and render the correct component:
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass http://backend;
        #이걸 하냐 안하냐에 따라 되는듯 
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/rest_framework/ {
        root /static/;
    }
}
